//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApp.WcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductExtension", Namespace="http://schemas.datacontract.org/2004/07/Server.DTO")]
    [System.SerializableAttribute()]
    public partial class ProductExtension : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityFrom {
            get {
                return this.QuantityFromField;
            }
            set {
                if ((this.QuantityFromField.Equals(value) != true)) {
                    this.QuantityFromField = value;
                    this.RaisePropertyChanged("QuantityFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityTo {
            get {
                return this.QuantityToField;
            }
            set {
                if ((this.QuantityToField.Equals(value) != true)) {
                    this.QuantityToField = value;
                    this.RaisePropertyChanged("QuantityTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPriceFrom {
            get {
                return this.UnitPriceFromField;
            }
            set {
                if ((this.UnitPriceFromField.Equals(value) != true)) {
                    this.UnitPriceFromField = value;
                    this.RaisePropertyChanged("UnitPriceFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPriceTo {
            get {
                return this.UnitPriceToField;
            }
            set {
                if ((this.UnitPriceToField.Equals(value) != true)) {
                    this.UnitPriceToField = value;
                    this.RaisePropertyChanged("UnitPriceTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderContext", Namespace="http://schemas.datacontract.org/2004/07/Server.DTO")]
    [System.SerializableAttribute()]
    public partial class OrderContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryDateField, value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ClientApp.WcfService.CompositeType GetDataUsingDataContract(ClientApp.WcfService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ClientApp.WcfService.CompositeType> GetDataUsingDataContractAsync(ClientApp.WcfService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        void AddProduct(CustomerApp.Models.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(CustomerApp.Models.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        void DeleteProduct(CustomerApp.Models.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(CustomerApp.Models.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        void UpdateProduct(CustomerApp.Models.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(CustomerApp.Models.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductExtensions", ReplyAction="http://tempuri.org/IService1/ProductExtensionsResponse")]
        System.Collections.Generic.List<ClientApp.WcfService.ProductExtension> ProductExtensions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductExtensions", ReplyAction="http://tempuri.org/IService1/ProductExtensionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientApp.WcfService.ProductExtension>> ProductExtensionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProducts", ReplyAction="http://tempuri.org/IService1/GetProductsResponse")]
        System.Collections.Generic.List<CustomerApp.Models.Products> GetProducts(CustomerApp.Models.Products product, ClientApp.WcfService.ProductExtension productExtension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProducts", ReplyAction="http://tempuri.org/IService1/GetProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CustomerApp.Models.Products>> GetProductsAsync(CustomerApp.Models.Products product, ClientApp.WcfService.ProductExtension productExtension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomerData", ReplyAction="http://tempuri.org/IService1/GetCustomerDataResponse")]
        System.Collections.Generic.List<CustomerApp.Models.Customers> GetCustomerData(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomerData", ReplyAction="http://tempuri.org/IService1/GetCustomerDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CustomerApp.Models.Customers>> GetCustomerDataAsync(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsUserAuthenticated", ReplyAction="http://tempuri.org/IService1/IsUserAuthenticatedResponse")]
        bool IsUserAuthenticated(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsUserAuthenticated", ReplyAction="http://tempuri.org/IService1/IsUserAuthenticatedResponse")]
        System.Threading.Tasks.Task<bool> IsUserAuthenticatedAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserCredentials", ReplyAction="http://tempuri.org/IService1/GetUserCredentialsResponse")]
        CustomerApp.Models.Employees GetUserCredentials(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserCredentials", ReplyAction="http://tempuri.org/IService1/GetUserCredentialsResponse")]
        System.Threading.Tasks.Task<CustomerApp.Models.Employees> GetUserCredentialsAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TakeOrders", ReplyAction="http://tempuri.org/IService1/TakeOrdersResponse")]
        System.Collections.Generic.List<CustomerApp.Models.Orders> TakeOrders(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TakeOrders", ReplyAction="http://tempuri.org/IService1/TakeOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CustomerApp.Models.Orders>> TakeOrdersAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EmployeesOrders", ReplyAction="http://tempuri.org/IService1/EmployeesOrdersResponse")]
        System.Collections.Generic.List<ClientApp.WcfService.OrderContext> EmployeesOrders(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EmployeesOrders", ReplyAction="http://tempuri.org/IService1/EmployeesOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientApp.WcfService.OrderContext>> EmployeesOrdersAsync(string accessKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ClientApp.WcfService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ClientApp.WcfService.IService1>, ClientApp.WcfService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ClientApp.WcfService.CompositeType GetDataUsingDataContract(ClientApp.WcfService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ClientApp.WcfService.CompositeType> GetDataUsingDataContractAsync(ClientApp.WcfService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public void AddProduct(CustomerApp.Models.Products product) {
            base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(CustomerApp.Models.Products product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public void DeleteProduct(CustomerApp.Models.Products product) {
            base.Channel.DeleteProduct(product);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(CustomerApp.Models.Products product) {
            return base.Channel.DeleteProductAsync(product);
        }
        
        public void UpdateProduct(CustomerApp.Models.Products product) {
            base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(CustomerApp.Models.Products product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public System.Collections.Generic.List<ClientApp.WcfService.ProductExtension> ProductExtensions() {
            return base.Channel.ProductExtensions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientApp.WcfService.ProductExtension>> ProductExtensionsAsync() {
            return base.Channel.ProductExtensionsAsync();
        }
        
        public System.Collections.Generic.List<CustomerApp.Models.Products> GetProducts(CustomerApp.Models.Products product, ClientApp.WcfService.ProductExtension productExtension) {
            return base.Channel.GetProducts(product, productExtension);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CustomerApp.Models.Products>> GetProductsAsync(CustomerApp.Models.Products product, ClientApp.WcfService.ProductExtension productExtension) {
            return base.Channel.GetProductsAsync(product, productExtension);
        }
        
        public System.Collections.Generic.List<CustomerApp.Models.Customers> GetCustomerData(int customerId) {
            return base.Channel.GetCustomerData(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CustomerApp.Models.Customers>> GetCustomerDataAsync(int customerId) {
            return base.Channel.GetCustomerDataAsync(customerId);
        }
        
        public bool IsUserAuthenticated(string accessKey) {
            return base.Channel.IsUserAuthenticated(accessKey);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserAuthenticatedAsync(string accessKey) {
            return base.Channel.IsUserAuthenticatedAsync(accessKey);
        }
        
        public CustomerApp.Models.Employees GetUserCredentials(string accessKey) {
            return base.Channel.GetUserCredentials(accessKey);
        }
        
        public System.Threading.Tasks.Task<CustomerApp.Models.Employees> GetUserCredentialsAsync(string accessKey) {
            return base.Channel.GetUserCredentialsAsync(accessKey);
        }
        
        public System.Collections.Generic.List<CustomerApp.Models.Orders> TakeOrders(string accessKey) {
            return base.Channel.TakeOrders(accessKey);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CustomerApp.Models.Orders>> TakeOrdersAsync(string accessKey) {
            return base.Channel.TakeOrdersAsync(accessKey);
        }
        
        public System.Collections.Generic.List<ClientApp.WcfService.OrderContext> EmployeesOrders(string accessKey) {
            return base.Channel.EmployeesOrders(accessKey);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientApp.WcfService.OrderContext>> EmployeesOrdersAsync(string accessKey) {
            return base.Channel.EmployeesOrdersAsync(accessKey);
        }
    }
}
